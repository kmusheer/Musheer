{"kind":"FETCH","data":{"headers":{"connection":"close","content-encoding":"gzip","content-type":"application/json","date":"Sat, 17 May 2025 16:51:50 GMT","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Accept-Encoding"},"body":"","status":200,"tags":["/blogs/page"],"url":"http://localhost:3000/api/blogs"},"revalidate":31536000}