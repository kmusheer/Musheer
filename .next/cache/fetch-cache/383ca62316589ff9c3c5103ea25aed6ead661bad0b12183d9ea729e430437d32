{"kind":"FETCH","data":{"headers":{"connection":"close","content-encoding":"gzip","content-type":"application/json","date":"Sun, 03 Sep 2023 05:18:44 GMT","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Accept-Encoding"},"body":"","status":200,"tags":["/blogs/page","/blogs/[blogid]/page"],"url":"http://localhost:3000/api/blogs"},"revalidate":31536000}